{:paths ["script"]
 :tasks {:requires [[build-examples]]

         test {:task (clojure "-M:test")}
         test:ci {:task (clojure "-M:test" "--skip-meta" "skip-ci")}
         test:watch {:task (clojure "-M:test" "--watch")}
         test:coverage {:task (clojure "-M:test-coverage")}
         test:init-submodules (shell "git submodule update --init test/projects/codox test/projects/promesa examples/structurizr/examples")

         website {:depends [website:content website:build]}
         website:start {:task (shell {:dir "website"} "bun start")}
         website:build {:task (shell {:dir "website"} "bun run build")}
         website:docs {:task (build-examples/build-dinodoc-docs)}
         website:content
         {:depends
          [website:docs
           example:polylith
           example:promesa
           example:reitit
           example:ring
           example:structurizr
           example:statecharts
           example:openapi
           example:dbschema
           example:kotlin
           example:java]}

         ;; Debug test samples at http://localhost:3000/docs/samples/example/
         samples:copy {:task (build-examples/copy-test-samples)}

         example:polylith {:task (build-examples/build-example-docs "polylith")}
         example:promesa {:task (build-examples/build-example-docs "promesa")}
         example:reitit {:task (build-examples/build-example-docs "reitit")}
         example:ring {:task (build-examples/build-example-docs "ring")}
         example:structurizr {:task (build-examples/build-example-docs "structurizr")}
         example:statecharts {:task (build-examples/build-example-docs "statecharts")}
         example:dbschema {:task (build-examples/build-example-docs "dbschema")}

         example:kotlin {:task (build-examples/build-example-docs "kotlin")}
         example:java {:task (build-examples/build-example-docs "java")}

         example:openapi:reitit {:task (shell {:dir "examples/openapi"} "clojure -M:doc")}
         example:openapi {:depends [example:openapi:reitit]
                          :task (shell {:dir "website"} "bun run docusaurus gen-api-docs all")}

         deploy {:depends [website]
                 :task (shell "bunx wrangler pages deploy --project-name dinodoc website/build")}}}
